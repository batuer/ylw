chmod -R a+x ./

adb shell setenforce 1
adb shell debuggerd -b processId
adb shell screencap -p | sed 's/\r$//' > screen.png
adb shell screencap -p /sdcard/screen.png
adb logcat -b all 2>&1 | tee log.txt
adb shell setprop persist.sys.hilog.debug.on true
adb shell settings get secure
data/system/users/0
adb shell stop;adb shell start
adb shell am startservice -n com.android.phone/com.android.phone.TelephonyDebugService --user 0 -a <action>
adb shell am broadcast -a delete.siminfo
adb shell dumpsys -l
adb shell service list
adb shell dumpsys activity service com.android.phone.TelephonyDebugService
adb pull data/user_de/0/com.android.providers.telephony/databases
adb pull data/data/com.android.providers.contacts/databases
adb pull data/data/com.android.providers.media/databases
adb shell pm clear com.android.providers.telephony
adb shell pm list packages
adb shell am broadcast --user 0 -a REFLECT_CHANGE_FILED --es CLASS_NAME "com.android.server.pm.PackageManagerService" --es FILED_NAME "DEBUG_INSTALL" --ez FILED_VALUE false --receiver-permission "com.test.permission"
adb shell am start -n com.android.dialer/com.android.dialer.InCallActivity

adb root;adb shell "echo --wipe_data > /cache/recovery/command";adb shell "reboot recovery"
adb shell uiautomator dump/ui.xml

adb shell setprop persist.log.tag.Dialer V & adb shell setprop persist.log.tag.TelecomFramework V & adb shell setprop persist.log.tag.Telecom V & adb shell setprop persist.log.tag.Telephony V  & adb shell setprop persist.log.tag.SubscriptionController V & adb shell setprop persist.log.tag.SIMRecords V & adb shell setprop persist.log.tag.AdnRecord V & adb shell setprop persist.log.tag.QImsService V & adb shell setprop persist.log.tag.AdnRecord V & adb shell setprop persist.log.tag.ImsPhoneCall V
adb shell setprop persist.log.tag.MmsService V
adb shell setprop persist.log.tag.NotificationService V  & adb shell setprop persist.log.tag.NotificationRecord V & adb shell setprop persist.log.tag.notification_assistant V & adb shell setprop persist.log.tag.AlertNotifManager V
adb shell setprop persist.log.tag.Tile V & adb shell setprop persist.log.tag.volume V
adb shell setprop persist.log.tag.SQLiteQueryBuilder V



数据
updateDataActivity
SETUP_DATA_CALL|trySetupData for APN type|setupData: apnContext=|setupData: dc=|setupData: initing|trySetupData failed|connect: carrier=|bringUp: apnContext=|setupDataCall
关闭数据业务
UserDataEnabled|EVENT_DATA_ENABLED_CHANGED|onDataEnabledChanged|cleanUpAllConnectionsInternal: |teardownForDun: APNs|cleanUpConnectionInternal|EVENT_DISCONNECT|deactivateDataCall|DEACTIVATE_DATA_CALL
开启数据业务
UserDataEnabled|EVENT_DATA_ENABLED_CHANGED|onDataEnabledChanged|reevaluate restricted state|setupDataOnAllConnectableApns|tearDown: apnContext|trySetupData|SETUP_DATA_CALL|getPreferredApn|onDataSetupComplete

挂断电话
end call button clicked|endCallClicked|REQUEST_DISCONNECT|TelephonyConnectionService: disconnect|> HANGUP|< HANGUP|< GET_CURRENT_CALLS|ImsCallSessionImpl : terminate|GsmCdmaConnection: onDisconnect|UNSOL_RESPONSE_CALL_STATE_CHANGED|handleCalls|callSessionTerminated
end call button clicked|endCallClicked|TelecomAdapter: disconnectCall|InCallAdapter: disconnectCall|REQUEST_DISCONNECT|CallsManager: disconnectCall|Call: Send disconnect to connection service for call|: disconnect|InCallController: Sending updateCall|TelephonyConnectionService: disconnect|onDisconnect|ImsCall : terminate|ImsCallSessionImpl : terminate|> HANGUP|< HANGUP

拒接
Decline

主叫
UNSOL_RESPONSE_CALL_STATE_CHANGED|CALLOUT from|onCreateOutgoingConnection,subId|placeOutgoingConnection|UserCallIntentProcessor: processOutgoingCallIntent|TelephonyConnectionService: createConnection|> DIAL|< DIAL|Dial Request - address|Telecom: UserCallIntentProcessor: handleOutgoingCall|onTransact add new outgoing call|handle MSG_NEW_OUTGOING_CALL|processOutgoingCallIntent -> subId=|processOutgoingCallIntent -> slotId=|sosEmergencyDialType = |startOutgoingCall|CallsManager: addCall|onCallAdded|defaultDialer: |Skipping binding to|handleCreateConnectionSuccessful|onUpdate -|startOrFinishUi|Broadcasting intent:|Received new-outgoing-call-broadcast|attemptNextPhoneAccount|Trying attempt|telecom.*?createConnection|Service bound|RecordServiceClient: onServiceConnected|TelecomCallCallback onStateChanged call=|ringState|CallCardFragment: videoState
01FF5.*?DisconnectCause|01FF5.*?gateway|01FF5.*?callForwardState

CALLOUT from|UserCallIntentProcessor: processOutgoingCallIntent|UserCallIntentProcessor: handleOutgoingCall|TelecomServiceImpl: handle MSG_NEW_OUTGOING_CALL|CallIntentProcessor: processOutgoingCallIntent|CallsManager: addCall|InCallController: onCallAdded|InCallController: mInCallServiceConnection isConnected|startOutgoingCall

（1）Telephony
onCreateOutgoingConnection,subId|placeOutgoingConnection|MSG_PRECISE_CALL_STATE_CHANGED|Update state from|onStateChanged, state: |setCallState
（2）Telecom
showDisableVolteHdCallsDialog|processOutgoingCallIntent videoState = |handleOutgoingCall|CallForward onTransact|onTransact add new outgoing call|handle MSG_NEW_OUTGOING_CALL|dual number is not support in roaming, stop call|processOutgoingCallIntent -> subId=|processOutgoingCallIntent -> slotId=|processOutgoingCallIntent - phoneAccountHandleId is valid, set subId to|deviceType = |sosEmergencyDialType = |startOutgoingCall|CallsManager: addCall|onCallAdded|defaultDialer: |Attempting to bind to InCall|Skipping binding to|onConnected|handleCreateConnectionComplete|handleCreateConnectionSuccessful|setCallState|Sending updateCall|Components updated:
（3）InCallUI
onCallAdded|onUpdate - |onCallListChange|startOrFinishUi|showInCall|onCreate()... this =|Broadcasting intent:|Received new-outgoing-call-broadcast|attemptNextPhoneAccount|Trying attempt|createConnection|Service bound|onServiceConnected|TelecomCallCallback onStateChanged call=|ringState|videoState|DisconnectCause|gateway|callForwardState

被叫
handleNewRingingConnection|UNSOL_RESPONSE_CALL_STATE_CHANGED|complete Relayout Window.*?InCallActivity|_start_.*?InCallActivity|_resume.*?InCallActivity|InCallActivity: onStart|InCallActivity: onResume|WindowManager: addWindow: Window.*InCallActivity|startActivityMayWait.*?InCallActivity|GET_CURRENT_CALLS|CallList: onIncoming
Telecom: CallsManager: addCall|Attempting to bind to InCall.*?InCallServiceImpl|FILTERING_COMPLETED

UNSOL_RESPONSE_CALL_STATE_CHANGED|ImsServiceSubHandler : Message received: what =|Event EVENT_POLL_CALLS_RESULT|Adding new incoming call with phoneAccountHandle|createConnection, callManagerAccount|FILTERING_|CallsManager: setCallState|Call added with id|InCallPresenter: onIncomingCall

CS通话
UNSOL_RESPONSE_CALL_STATE_CHANGED|GET_CURRENT_CALLS|handlePollCalls|, newParent= 

发送短信
content://sms|SMSDispatcher: sendText|ImsSmsDispatcher.*sendSms:|onSendSmsResult|_SMS
接收短信
UNSOL_INCOMING_IMS_SMS|UNSOL_RESPONSE_NEW_SMS|SMS_DELIVER|addTrackerToRawTable|Delivering SMS to
 notification_
 发送彩信
 MmsService: onCreate|MmsSender: Sending MMS|MmsService: sendMessage|MmsNetworkManager: start new network request|trySetupData for APN type mms|SETUP_DATA_CALL|MmsService: NetworkCallbackListener|HTTP: .*PDU size|content://mms
 接收彩信
 _SMS|WAP_PUSH_DELIVER_ACTION|ReceiveMmsMessageAction: Received MMS message
 
接听
REQUEST_ANSWER|GlowPadAnswerFragment: onClick|Telecom: ActionAnswerCall: perform answer call for|CallsManager: answerCall: Incoming call

信号强度
RIL_UNSOL_HW_SIGNAL_STRENGTH

亮屏
窗口绘制  finishKeyguardDrawn -> waitForAllWindowsDrawn|All windows ready for display
LCD上电  screen state: state   Setting power mode
计算背光  Enable LightSensor  Animating brightness: target
Unblocked screen on after|screen turning on|complete Relayout Window.*?InCallActivity|onWakeUp: reason|Waking up from|RingerDecodeUtil.*?Duration|All windows ready for display
viewVisibilityChanged changed reason
run cts -m CtsTelecomTestCases -t android.telecom.cts.PhoneAccountSuggestionServiceTest#testPartialSuggestions

PowerManagerService.*Sleep|ActivityTaskManager: START|AmDialogActivity:|UNSOL_RESPONSE_CALL_STATE_CHANGED|sysui_heads_up_escalation|releaseWakeLock|acquireWakeLock|stopForegroundNotification|notification_.*dialer|REQUEST_ANSWER|GlowPadAnswerFragment: onClick|StatusBarNotifier.buildAndSendNotification - notificationType=2

开机流程
entered the android system|boot_progress|start proc.*systemui|start proc.*launcher|RIL Daemon Started|wm_create_activity|init first stage started

